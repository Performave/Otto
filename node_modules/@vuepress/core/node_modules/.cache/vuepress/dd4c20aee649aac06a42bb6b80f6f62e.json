{"remainingRequest":"/Volumes/MacOS/GitHub/Otto/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Volumes/MacOS/GitHub/Otto/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Volumes/MacOS/GitHub/Otto/node_modules/vue-loader/lib/index.js??ref--1-1!/Volumes/MacOS/GitHub/Otto/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Volumes/MacOS/GitHub/Otto/core_concepts/mobileresponsiveness.md?vue&type=template&id=23c3eaac&","dependencies":[{"path":"/Volumes/MacOS/GitHub/Otto/core_concepts/mobileresponsiveness.md","mtime":1624227181244},{"path":"/Volumes/MacOS/GitHub/Otto/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/MacOS/GitHub/Otto/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Volumes/MacOS/GitHub/Otto/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/MacOS/GitHub/Otto/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/MacOS/GitHub/Otto/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ0NvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yJyx7YXR0cnM6eyJzbG90LWtleSI6X3ZtLiRwYXJlbnQuc2xvdEtleX19LFtfYygnaDEnLHthdHRyczp7ImlkIjoibW9iaWxlLXJlc3BvbnNpdmVuZXNzIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjbW9iaWxlLXJlc3BvbnNpdmVuZXNzIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIE1vYmlsZSBSZXNwb25zaXZlbmVzcyIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkxldCdzIHNheSB5b3UganVzdCBkZXNpZ25lZCBhIG5ldyBwYWdlLiBJdCBsb29rcyBmYW50YXN0aWMsIGFuZCBpdCBmb2xsb3dzIGFsbCBteSBzdGFuZGFyZHMgYW5kIGd1aWRlbGluZXMg8J+kly4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJCVVQgV0FJVCEiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJZb3Ugb3BlbmVkIGl0IG9uIHlvdXIgcGhvbmUsIGFuZCBpdCBsb29rZWQgbGlrZSBzb21lIHJhbmRvbSBhcnQgYnkgUGljYXNzbyBvciBWYW4gR29naC4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX2MoJ3N0cm9uZycsW192bS5fdigiVXNlIHRoZSBtb2JpbGUgdmlldyBmZWF0dXJlIGluIHRoZSBXaXggZWRpdG9yIHRvIHJlYXJyYW5nZSB0aGUgY29udGVudCIpXSksX3ZtLl92KCJcblNlZTogIiksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL2ltZ3VyLmNvbS81TUZncVQwLnBuZyIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiaHR0cHM6Ly9pbWd1ci5jb20vNU1GZ3FUMC5wbmciKSxfYygnT3V0Ym91bmRMaW5rJyldLDEpXSksX3ZtLl92KCIgIiksX2MoJ2gzJyx7YXR0cnM6eyJpZCI6IndoeSJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI3doeSJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBXaHk/IildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiVGhpcyBpcyBiZWNhdXNlIG1vYmlsZSByZXNwb25zaXZlbmVzcyAiKSxfYygnc3Ryb25nJyxbX3ZtLl92KCJkb2VzIG5vdCBleGlzdCIpXSksX3ZtLl92KCIgaW4gV2l4LiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlRvIGV4cGxhaW4gaXQgYmV0dGVyOiBpbWFnaW5lIHlvdSBoYXZlIGEgbGFyZ2UgdGV4dGJvb2sgKDEyXCIgeCA5XCIpLCBhbmQgeW91IHdhbnQgdG8gYnJpbmcgaXQgd2l0aCB5b3Ugb24gYSByb2FkIHRyaXAuIFlvdXIgcGFyZW50cywgIiksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL3dpeC5jb20iLCJ0YXJnZXQiOiJfYmxhbmsiLCJyZWwiOiJub29wZW5lciBub3JlZmVycmVyIn19LFtfdm0uX3YoIldpeC5jb20iKSxfYygnT3V0Ym91bmRMaW5rJyldLDEpLF92bS5fdigiLCBzYXlzIGl0J3MgdG9vIGJpZyB0byBmaXQgaW4gYSBzcGFjZSAoMTBcIiB4IDVcIiksIHNvIHdoYXQgdGhleSBkbyBpcyBjaG9wIG9mZiB0aGUgb3ZlcmxhcHBpbmcgc2VjdGlvbnMgb2YgdGhlIGJvb2sgc28gaXQgZml0cyBpbiB0aGUgc3BhY2UuXG5TdXJlLCBpdCBnZXRzIHRoZSBqb2IgZG9uZS4gQnV0IGluIHByYWN0aWNlLCB0aGUgdGV4dGJvb2sgaXMgdW5yZWFkYWJsZS4iKV0pLF92bS5fdigiICIpLF9jKCdoMScse2F0dHJzOnsiaWQiOiJiZXN0LXByYWN0aWNlcyJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2Jlc3QtcHJhY3RpY2VzIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIEJlc3QgUHJhY3RpY2VzIildKSxfdm0uX3YoIiAiKSxfYygnaDMnLHthdHRyczp7ImlkIjoiZm9ybWF0dGluZy10ZXh0In19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjZm9ybWF0dGluZy10ZXh0In19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIEZvcm1hdHRpbmcgdGV4dCIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkNvbnRpbnVlIHRvIGFsaWduIGFsbCB0aGUgdGV4dCB0byB0aGUgIiksX2MoJ3N0cm9uZycsW192bS5fdigiTEVGVCIpXSksX3ZtLl92KCIganVzdCBsaWtlIHlvdSBkaWQgaW4gZGVza3RvcCBtb2RlLlxuRG8gbm90IGNlbnRlciBhcyBpdCBicmVha3MgY29uc2lzdGVuY3kuIildKSxfdm0uX3YoIiAiKSxfYygnaDMnLHthdHRyczp7ImlkIjoid2hpdGVzcGFjZSJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI3doaXRlc3BhY2UifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgV2hpdGVzcGFjZSIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkVuc3VyZSB0aGF0IHRoZXJlIGlzIHN0aWxsIGFkZXF1YXRlIHdoaXRlc3BhY2UgYmV0d2VlbiBwYXJhZ3JhcGhzIG9mIHRleHQsIHRpdGxlcywgYW5kIGJ1dHRvbnMuIildKSxfdm0uX3YoIiAiKSxfYygnaDMnLHthdHRyczp7ImlkIjoiZm9vdGVyIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjZm9vdGVyIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIEZvb3RlciIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkhvdmVyIHlvdXIgbW91c2UgYXQgdGhlIFRPUCBib3JkZXIgb2YgdGhlIGZvb3RlciwgYW5kIHlvdSBzaG91bGQgc2VlIGEgYnV0dG9uIHRvIERSQUcgdGhlIGZvb3RlciBkb3duLlxuWW91IGJhc2ljYWxseSB3YW50IFdISVRFU1BBQ0UgYmV0d2VlbiB0aGUgY29udGVudCBhbmQgdGhlIGZvb3Rlci4iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJTZWU6ICIpLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly9pbWd1ci5jb20vNU0xY0J4Zy5wbmciLCJ0YXJnZXQiOiJfYmxhbmsiLCJyZWwiOiJub29wZW5lciBub3JlZmVycmVyIn19LFtfdm0uX3YoImh0dHBzOi8vaW1ndXIuY29tLzVNMWNCeGcucG5nIiksX2MoJ091dGJvdW5kTGluaycpXSwxKV0pLF92bS5fdigiICIpLF9jKCdoMScse2F0dHJzOnsiaWQiOiJleGFtcGxlcyJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2V4YW1wbGVzIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIEV4YW1wbGVzIildKSxfdm0uX3YoIiAiKSxfYygnaDInLHthdHRyczp7ImlkIjoiZ29vZCJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2dvb2QifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgR29vZCIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOiJodHRwczovL2ltZ3VyLmNvbS9wMURXd0xwLnBuZyIsImFsdCI6Ikdvb2QifX0pXSksX3ZtLl92KCIgIiksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjdXN0b20tYmxvY2sgdGlwIn0sW19jKCdwJyx7c3RhdGljQ2xhc3M6ImN1c3RvbS1ibG9jay10aXRsZSJ9LFtfdm0uX3YoIkdvb2QiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJQbGVudHkgb2Ygd2hpdGVzcGFjZSBpcyB1c2VkIHdpdGhvdXQgdGFraW5nIHVwIFRPTyBtdWNoIHNwYWNlLlxuVGhlIHZpc2l0b3IgZG9lc24ndCBmZWVsIGNsYXVzdHJvcGhvYmljLCBhbmQgaXQgYWxzbyBsb29rcyB2aXN1YWxseSBhcHBlYWxpbmcg8J+YhC4iKV0pXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOiJodHRwczovL2ltZ3VyLmNvbS82d1BlNTF4LnBuZyIsImFsdCI6Ikdvb2QifX0pXSksX3ZtLl92KCIgIiksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjdXN0b20tYmxvY2sgdGlwIn0sW19jKCdwJyx7c3RhdGljQ2xhc3M6ImN1c3RvbS1ibG9jay10aXRsZSJ9LFtfdm0uX3YoIkdvb2QiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJQbGVudHkgb2Ygd2hpdGVzcGFjZSBpcyB1c2VkIHRvIGRpc3Rpbmd1aXNoIHRoZSB0ZXh0IGZyb20gdGhlIGJ1dHRvbnMgQU5EIHRoZSBjb250ZW50IE9WRVJBTEwgZnJvbSB0aGUgZm9vdGVyLiIpXSldKSxfdm0uX3YoIiAiKSxfYygnaDInLHthdHRyczp7ImlkIjoiYmFkIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjYmFkIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIEJhZCIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOiJodHRwczovL2ltZ3VyLmNvbS81R1RPbFp3LnBuZyIsImFsdCI6IkJhZCJ9fSldKSxfdm0uX3YoIiAiKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImN1c3RvbS1ibG9jayBkYW5nZXIifSxbX2MoJ3AnLHtzdGF0aWNDbGFzczoiY3VzdG9tLWJsb2NrLXRpdGxlIn0sW192bS5fdigiQkFEIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiV2hpdGVzcGFjZS5leGUgaGFzIHN0b3BwZWQgcmVzcG9uZGluZyIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkpva2VzIGFzaWRlLCB0aGVyZSdzIHZpcnR1YWxseSBubyB3aGl0ZXNwYWNlLiBBTFNPLCB0aGUgdGl0bGUgaXMgYWxpZ25lZCB0byB0aGUgQ0VOVEVSLCB3aGljaCBicmVha3MgdGhlIGNvbnNpc3RlbmN5IG9mIGFsaWduaW5nIHRvIHRoZSAiKSxfYygnc3Ryb25nJyxbX3ZtLl92KCJMRUZUIildKSxfdm0uX3YoIi4iKV0pXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOiJodHRwczovL2ltZ3VyLmNvbS95ZmRnUXVWLnBuZyIsImFsdCI6IkJhZCJ9fSldKSxfdm0uX3YoIiAiKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6ImN1c3RvbS1ibG9jayBkYW5nZXIifSxbX2MoJ3AnLHtzdGF0aWNDbGFzczoiY3VzdG9tLWJsb2NrLXRpdGxlIn0sW192bS5fdigiQkFEIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiVGhlcmUgaXMgbm8gd2hpdGVzcGFjZSBiZXR3ZWVuIHRoZSBidXR0b25zIGFuZCB0aGUgZm9vdGVyLiIpXSldKV0pfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}