{"remainingRequest":"/Volumes/MacOS/GitHub/Otto/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Volumes/MacOS/GitHub/Otto/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Volumes/MacOS/GitHub/Otto/node_modules/vue-loader/lib/index.js??ref--1-1!/Volumes/MacOS/GitHub/Otto/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Volumes/MacOS/GitHub/Otto/creating_a_page/README.md?vue&type=template&id=19573785&","dependencies":[{"path":"/Volumes/MacOS/GitHub/Otto/creating_a_page/README.md","mtime":1624229452324},{"path":"/Volumes/MacOS/GitHub/Otto/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/MacOS/GitHub/Otto/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Volumes/MacOS/GitHub/Otto/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/MacOS/GitHub/Otto/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/MacOS/GitHub/Otto/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgIkNvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yIiwKICAgIHsgYXR0cnM6IHsgInNsb3Qta2V5IjogX3ZtLiRwYXJlbnQuc2xvdEtleSB9IH0sCiAgICBbCiAgICAgIF9jKCJoMSIsIHsgYXR0cnM6IHsgaWQ6ICJjcmVhdGluZy1hLXBhZ2UiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgeyBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLCBhdHRyczogeyBocmVmOiAiI2NyZWF0aW5nLWEtcGFnZSIgfSB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgQ3JlYXRpbmcgYSBwYWdlIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImN1c3RvbS1ibG9jayBkYW5nZXIiIH0sIFsKICAgICAgICBfYygicCIsIHsgc3RhdGljQ2xhc3M6ICJjdXN0b20tYmxvY2stdGl0bGUiIH0sIFtfdm0uX3YoIldBUk5JTkciKV0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgX3ZtLl92KCJUaGVzZSBpbnN0cnVjdGlvbnMgYXNzdW1lIHlvdSBoYXZlIGFscmVhZHkgcmVhZCBhbGwgdGhlICIpLAogICAgICAgICAgX2MoInN0cm9uZyIsIFtfdm0uX3YoIkNPUkUgQ09OQ0VQVFMiKV0pCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJJZiB5b3UgZG9uJ3QgdW5kZXJzdGFuZCB3aGF0IHdoaXRlc3BhY2Ugb3IgdHlwb2dyYXBoeSBpcywgcGxlYXNlIG1ha2Ugc3VyZSB0byByZWFkIHRoZW0uIgogICAgICAgICAgKQogICAgICAgIF0pCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgyIiwgeyBhdHRyczogeyBpZDogInN0ZXAtMSIgfSB9LCBbCiAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjc3RlcC0xIiB9IH0sIFsKICAgICAgICAgIF92bS5fdigiIyIpCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgU3RlcCAxIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoIkNyZWF0ZSBhICIpLAogICAgICAgIF9jKCJzdHJvbmciLCBbX3ZtLl92KCJoZWFkaW5nIDIiKV0pLAogICAgICAgIF92bS5fdigiIHRleHQgbGFiZWwgYW5kIG1ha2Ugc3VyZSBpdCdzIHBsYWNlZCBhdCBleGFjdGx5ICIpLAogICAgICAgIF9jKCJzdHJvbmciLCBbX3ZtLl92KCJYOiAwLCBZOiAxMzEiKV0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICBzcmM6ICJodHRwczovL2ltZ3VyLmNvbS9wWHZiQkZSLnBuZyIsCiAgICAgICAgICAgIGFsdDogIkhlYWRpbmcgMiBwbGFjZW1lbnQiCiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDIiLCB7IGF0dHJzOiB7IGlkOiAic3RlcC0yIiB9IH0sIFsKICAgICAgICBfYygiYSIsIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiNzdGVwLTIiIH0gfSwgWwogICAgICAgICAgX3ZtLl92KCIjIikKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiBTdGVwIDIiKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJDb21wYXJlIGFuZCBkb3VibGUgY2hlY2sgdGhlIHByb3BlcnRpZXMgKGZvbnQsIHNpemUsIGNvbG9yKSBvZiB0aGUgdGV4dCBsYWJlbC4gVXNlIGltYWdlIGJlbG93IHRvIHZlcmlmeSBwcm9wZXJ0aWVzLiIKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgIHNyYzogImh0dHBzOi8vaW1ndXIuY29tL3dQc2hNbDkucG5nIiwKICAgICAgICAgICAgYWx0OiAiVmVyaWZ5aW5nIHByb3BlcnRpZXMiCiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDIiLCB7IGF0dHJzOiB7IGlkOiAic3RlcC0zIiB9IH0sIFsKICAgICAgICBfYygiYSIsIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiNzdGVwLTMiIH0gfSwgWwogICAgICAgICAgX3ZtLl92KCIjIikKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiBTdGVwIDMiKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgW192bS5fdigiQ3JlYXRlIHRoZSBtYWluIGJvZHkgKG9yIGRlc2NyaXB0aW9uKSIpXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoIllvdSBjYW4gbWFrZSB0aGlzIGJ5IGNsaWNraW5nIHRoZSAiKSwKICAgICAgICBfYygic3Ryb25nIiwgW192bS5fdigiKyBzeW1ib2wgb24gdGhlIGxlZnQiKV0pLAogICAgICAgIF92bS5fdigiIC0+ICIpLAogICAgICAgIF9jKCJzdHJvbmciLCBbX3ZtLl92KCJ0ZXh0IildKSwKICAgICAgICBfdm0uX3YoIiAtPiAiKSwKICAgICAgICBfYygic3Ryb25nIiwgW192bS5fdigidGhlbWVkIHRleHQiKV0pLAogICAgICAgIF92bS5fdigiIC0+ICIpLAogICAgICAgIF9jKCJzdHJvbmciLCBbX3ZtLl92KCJwYXJhZ3JhcGgiKV0pLAogICAgICAgIF92bS5fdigiIChJJ20gYSBwYXJhZ3JhcGguLi4pIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgc3JjOiAiaHR0cHM6Ly9pbWd1ci5jb20vODB3NEFmSC5wbmciLAogICAgICAgICAgICBhbHQ6ICJDcmVhdGluZyBib2R5IHBhcmFncmFwaCIKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMiIsIHsgYXR0cnM6IHsgaWQ6ICJzdGVwLTQtZXh0cmEiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgeyBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLCBhdHRyczogeyBocmVmOiAiI3N0ZXAtNC1leHRyYSIgfSB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgU3RlcCA0IChleHRyYSkiKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigiSGVyZSdzIGFuIGV4YW1wbGUgb2Ygc3ViIGhlYWRpbmdzIGFuZCBzdWItc3ViIGhlYWRpbmdzXG4iKSwKICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgc3JjOiAiaHR0cHM6Ly9pbWd1ci5jb20vMG5Hak5HbS5wbmciLAogICAgICAgICAgICBhbHQ6ICJzdWJoZWFkaW5ncyBhbmQgc3ViLXN1YiBoZWFkaW5ncyIKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMSIsIHsgYXR0cnM6IHsgaWQ6ICJjb25jbHVzaW9uIiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiNjb25jbHVzaW9uIiB9IH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBDb25jbHVzaW9uIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfYygic3Ryb25nIiwgW192bS5fdigiWU9VIERJRCBJVCEhISIpXSksCiAgICAgICAgX3ZtLl92KCJcbkNvbmdyYXR1bGF0aW9ucyEhIPCfjonwn46J8J+OifCfjokiKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJCdXQgbW9zdCBpbXBvcnRhbnRseSwgSSB3YW50ZWQgdG8gZ2V0IGFjcm9zcyB0aGUgaWRlYSB0aGF0IGV2ZXJ5dGhpbmcgeW91IG1ha2Ugb24gdGhlIHdlYnNpdGUgIgogICAgICAgICksCiAgICAgICAgX2MoInN0cm9uZyIsIFtfdm0uX3YoInNob3VsZCIpXSksCiAgICAgICAgX3ZtLl92KCIgYmUgIiksCiAgICAgICAgX2MoInN0cm9uZyIsIFtfdm0uX3YoInByYWdtYXRpYyIpXSksCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIi4gWW91IGFyZSBkZXNpZ25pbmcgYSB3ZWJzaXRlIHRoZSB3YXkgdGhlIHZpc2l0b3JzIHdhbnQgdG8gc2VlIGl0LCBub3QgZm9yIHlvdXJzZWxmLiIKICAgICAgICApCiAgICAgIF0pCiAgICBdCiAgKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}